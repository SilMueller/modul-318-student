<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ColDeparture.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="ColStartTIme.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="ColEndTIme.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="ColDriveTime.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="ColDelay.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>